spring.application.name: patient-monitoring-app
spring.cloud.function.definition=process


spring.cloud.stream.kafka.streams.binder.brokers=localhost:29092
spring.cloud.stream.kafka.streams.binder.application-id=dev 
spring.cloud.stream.kafka.streams.binder.configuration.schema.registry.url=http://localhost:8081

spring.cloud.stream.bindings.process-in-0.destination=pulse-events
spring.cloud.stream.bindings.process-in-1.destination=body-temp-events
spring.cloud.stream.bindings.process-out-0.destination=alerts
spring.cloud.stream.kafka.streams.bindings.process-in-0.consumer.timestampExtractorBeanName=timestampExtractor
spring.cloud.stream.kafka.streams.bindings.process-in-1.consumer.timestampExtractorBeanName=timestampExtractor
spring.cloud.stream.kafka.streams.bindings.process-in-0.consumer.topic.replication-factor=1
spring.cloud.stream.kafka.streams.bindings.process-in-1.consumer.topic.replication-factor=1
spring.cloud.stream.kafka.streams.bindings.process-out-0.consumer.topic.replication-factor=1


spring.cloud.stream.kafka.streams.binder.functions.process.applicationId=patient-monitoring-app
 

 

# https://docs.spring.io/spring-cloud-stream/docs/Elmhurst.BUILD-SNAPSHOT/reference/htmlsingle/#_message_conversion

#https://docs.spring.io/spring-cloud-schema-registry/docs/current/reference/html/spring-cloud-schema-registry.html#_avro_schema_registry_client_message_converters
 
 

#spring.cloud.stream.kafka.streams.binder.auto-add-partitions=true
#spring.cloud.stream.kafka.streams.binder.min-partition-count=4
#spring.cloud.stream.kafka.streams.binder.configuration.default.key.serde=org.apache.kafka.common.serialization.Serdes$ByteArraySerde
#spring.cloud.stream.kafka.streams.binder.configuration.default.value.serde=com.magicalpipelines.EntitySentimentAvroSerde
#spring.cloud.stream.kafka.streams.binder.configuration.commit.interval.ms=1000
#spring.cloud.stream.kafka.streams.binder.configuration.auto.offset.reset=latest
spring.cloud.stream.kafka.streams.binder.configuration.state.dir=/tmp/kafka-streams
spring.cloud.stream.kafka.streams.binder.configuration.application-id=dev
spring.cloud.stream.kafka.streams.binder.configuration.application.server=localhost:8080
spring.cloud.stream.kafka.streams.binder.configuration.cache.max.bytes.buffering=0 
logging.level.com.magicalpipelines=debug
spring.output.ansi.enabled=ALWAYS
#api.mode=SERVLET
api.mode=REACTIVE